###############################################################################
# EXPANSION INTERFACE AND SYSTEM CONTROL
NET "m_vp_llpi_phys_plat_nallatech_edge_device_m_prim_device_CONFIG_DATA[0]" IOSTANDARD = "LVCMOS25" | DRIVE = 8 | SLEW = SLOW | LOC = AJ26;
NET "m_vp_llpi_phys_plat_nallatech_edge_device_m_prim_device_CONFIG_DATA[1]" IOSTANDARD = "LVCMOS25" | DRIVE = 8 | SLEW = SLOW | LOC = AK27;
NET "m_vp_llpi_phys_plat_nallatech_edge_device_m_prim_device_CONFIG_DATA[2]" IOSTANDARD = "LVCMOS25" | DRIVE = 8 | SLEW = SLOW | LOC = AM14;
NET "m_vp_llpi_phys_plat_nallatech_edge_device_m_prim_device_CONFIG_DATA[3]" IOSTANDARD = "LVCMOS25" | DRIVE = 8 | SLEW = SLOW | LOC = AN14;
NET "m_vp_llpi_phys_plat_nallatech_edge_device_m_prim_device_CONFIG_DATA[4]" IOSTANDARD = "LVCMOS25" | DRIVE = 8 | SLEW = SLOW | LOC = AK29;
NET "m_vp_llpi_phys_plat_nallatech_edge_device_m_prim_device_CONFIG_DATA[5]" IOSTANDARD = "LVCMOS25" | DRIVE = 8 | SLEW = SLOW | LOC = AK28;
NET "m_vp_llpi_phys_plat_nallatech_edge_device_m_prim_device_CONFIG_DATA[6]" IOSTANDARD = "LVCMOS25" | DRIVE = 8 | SLEW = SLOW | LOC = AP13;
NET "m_vp_llpi_phys_plat_nallatech_edge_device_m_prim_device_CONFIG_DATA[7]" IOSTANDARD = "LVCMOS25" | DRIVE = 8 | SLEW = SLOW | LOC = AN13;
NET "REG_RDY_Z" IOSTANDARD = "LVCMOS25" | DRIVE = 8 | SLEW = SLOW | LOC = AL29;
NET "REG_CLK" IOSTANDARD = "LVCMOS25" | DRIVE = 8 | SLEW = SLOW | LOC = AK13;
NET "REG_ADS_Z" IOSTANDARD = "LVCMOS25" | DRIVE = 8 | SLEW = SLOW | LOC = AL30;
NET "REG_RESET_Z" IOSTANDARD = "LVCMOS25" | DRIVE = 8 | SLEW = SLOW | LOC = AK15;
NET "REG_RD_WR_Z" IOSTANDARD = "LVCMOS25" | DRIVE = 8 | SLEW = SLOW | LOC = AK14;
NET "REG_UDS_Z" IOSTANDARD = "LVCMOS25" | DRIVE = 8 | SLEW = SLOW | LOC = AJ30;
NET "REG_LDS_Z" IOSTANDARD = "LVCMOS25" | DRIVE = 8 | SLEW = SLOW | LOC = AK30;
NET "REG_EN_Z" IOSTANDARD = "LVCMOS25" | DRIVE = 8 | SLEW = SLOW | LOC = AK12;

NET "sys_led_out[0]" IOSTANDARD = "LVCMOS25" | DRIVE = 8 | SLEW = SLOW | LOC = AN28;
NET "sys_led_out[1]" IOSTANDARD = "LVCMOS25" | DRIVE = 8 | SLEW = SLOW | LOC = AP27;
NET "sys_led_out[2]" IOSTANDARD = "LVCMOS25" | DRIVE = 8 | SLEW = SLOW | LOC = AN30;
NET "sys_led_out[3]" IOSTANDARD = "LVCMOS25" | DRIVE = 8 | SLEW = SLOW | LOC = AP30;
NET "sys_led_out[4]" IOSTANDARD = "LVCMOS25" | DRIVE = 8 | SLEW = SLOW | LOC = AK17;
NET "sys_led_out[5]" IOSTANDARD = "LVCMOS25" | DRIVE = 8 | SLEW = SLOW | LOC = AL17;

NET "ram_pg" IOSTANDARD = "LVCMOS25" | LOC=AM29;
NET "mgt_pg" IOSTANDARD = "LVCMOS25" | LOC=AM13;


NET "eeprom_scl" IOSTANDARD = "LVCMOS25" | DRIVE = 8 | SLEW = SLOW | LOC = AP16;
NET "m_vp_llpi_phys_plat_nallatech_edge_device_m_prim_device_EEPROM_SDA" IOSTANDARD = "LVCMOS25" | DRIVE = 8 | SLEW = SLOW | LOC = AP15;

#Synplify LOC's 
NET "EEPROM_SDA" IOSTANDARD = "LVCMOS25" | DRIVE = 8 | SLEW = SLOW | LOC = AP15;

NET "CLK100P" IOSTANDARD = "LVDS_25" | LOC = AL27 | DIFF_TERM = "TRUE"; # 100MHz clock
NET "CLK100N" IOSTANDARD = "LVDS_25" | LOC = AL26 | DIFF_TERM = "TRUE";


###############################################################################
##TIMING CONSTRAINTS
###############################################################################
##TIMING CONSTRAINTS
NET "clk100p" TNM_NET=TG_clk100p;
TIMESPEC TS_clk100p=PERIOD TG_clk100p 10ns HIGH 50%;

NET "reg_clk" TNM_NET=TG_reg_clk;
TIMESPEC TS_reg_clk=PERIOD TG_reg_clk 10ns HIGH 50%;

NET "*/module_control_and_status_inst/global_register_inst/lvds_loopback_mode_reg<*>" TIG;
NET "*/module_control_and_status_inst/global_register_inst/fifo_rst_reg<*>" TIG;
NET "*/module_control_and_status_inst/global_register_inst/led_mode_reg<*>" TIG;
NET "*/module_control_and_status_inst/global_register_inst/ram_power_reg<*>" TIG;
INST "*/module_control_and_status_inst/module_sysmon_inst/SYSMON_INST" TIG;

NET "*/fsb_slave_module_lvds_link_inst/transmit_logic_generate.lvds_tx_inst/block_ram_fifo_module.half_lane_gen.Label1/BU2/U0/grf.rf/gcx.clkx/rd_pntr_gc[*]" TIG;

## SyncFIFOs

INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_modelReset/reset_hold*"    TNM=TG_model_rst;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_userRegReset/reset_hold*"  TNM=TG_reg_rst;

INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_write_q/Mram_fifoMem*" TNM=TG_model_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_write_q/dDoutReg*"     TNM=TG_edge_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_write_q/dGDeqPtr*"     TNM=TG_edge_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_write_q/sGEnqPtr*"     TNM=TG_model_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_write_q/dSyncReg1*"    TNM=TG_edge_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_write_q/sSyncReg1*"    TNM=TG_model_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_write_q/sNotFullReg*"  TNM=TG_model_clk;

INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_read_q/Mram_fifoMem*" TNM=TG_edge_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_read_q/dDoutReg*"     TNM=TG_model_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_read_q/dGDeqPtr*"     TNM=TG_model_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_read_q/sGEnqPtr*"     TNM=TG_edge_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_read_q/dSyncReg1*"    TNM=TG_model_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_read_q/sSyncReg1*"    TNM=TG_edge_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_read_q/sNotFullReg*"  TNM=TG_edge_clk;

INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_reg_write_q/Mram_fifoMem*" TNM=TG_reg_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_reg_write_q/dDoutReg*"     TNM=TG_model_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_reg_write_q/dGDeqPtr*"     TNM=TG_model_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_reg_write_q/sGEnqPtr*"     TNM=TG_reg_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_reg_write_q/dSyncReg1*"    TNM=TG_model_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_reg_write_q/sSyncReg1*"    TNM=TG_reg_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_reg_write_q/sNotFullReg*"  TNM=TG_reg_clk;

INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_reg_read_req_q/Mram_fifoMem*" TNM=TG_reg_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_reg_read_req_q/dDoutReg*"     TNM=TG_model_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_reg_read_req_q/dGDeqPtr*"     TNM=TG_model_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_reg_read_req_q/sGEnqPtr*"     TNM=TG_reg_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_reg_read_req_q/dSyncReg1*"    TNM=TG_model_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_reg_read_req_q/sSyncReg1*"    TNM=TG_reg_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_reg_read_req_q/sNotFullReg*"  TNM=TG_reg_clk;

INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_reg_write_ack_q/dGDeqPtr*"     TNM=TG_reg_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_reg_write_ack_q/sGEnqPtr*"     TNM=TG_model_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_reg_write_ack_q/dSyncReg1*"    TNM=TG_reg_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_reg_write_ack_q/sSyncReg1*"    TNM=TG_model_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_reg_write_ack_q/sNotFullReg*"  TNM=TG_model_clk;

INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_reg_read_rsp_q/Mram_fifoMem*" TNM=TG_model_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_reg_read_rsp_q/dDoutReg*"     TNM=TG_reg_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_reg_read_rsp_q/dGDeqPtr*"     TNM=TG_reg_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_reg_read_rsp_q/sGEnqPtr*"     TNM=TG_model_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_reg_read_rsp_q/dSyncReg1*"    TNM=TG_reg_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_reg_read_rsp_q/sSyncReg1*"    TNM=TG_model_clk;
INST "m_vp_llpi_phys_plat_nallatech_edge_device_m_sync_reg_read_rsp_q/sNotFullReg*"  TNM=TG_model_clk;

##
## Ideally, we would tag the transition with the actual frequency of the target
## clock domain.  We currently lack the infrastructure to do this, though it
## would be relatively easy to add to the build pipeline.  For now, require
## timing for what we expect to be the worst cases:  the 200MHz edge clock.
##
TIMESPEC TS_model_clk_to_edge_clk=FROM TG_model_clk TO TG_edge_clk 5ns DATAPATHONLY;
TIMESPEC TS_model_rst_to_edge_clk=FROM TG_model_rst TO TG_edge_clk TIG;

TIMESPEC TS_edge_clk_to_model_clk=FROM TG_edge_clk TO TG_model_clk 5ns DATAPATHONLY;
TIMESPEC TS_edge_rst_to_model_clk=FROM TG_edge_rst TO TG_model_clk TIG;


TIMESPEC TS_model_clk_to_usr_clk=FROM TG_model_clk TO TG_reg_clk 10ns DATAPATHONLY;
TIMESPEC TS_model_rst_to_usr_clk=FROM TG_model_rst TO TG_reg_clk TIG;

TIMESPEC TS_usr_clk_to_model_clk=FROM TG_reg_clk TO TG_model_clk 10ns DATAPATHONLY;
TIMESPEC TS_usr_rst_to_model_clk=FROM TG_reg_rst TO TG_model_clk TIG;
